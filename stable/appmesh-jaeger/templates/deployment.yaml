apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "appmesh-jaeger.fullname" . }}
  labels:
{{ include "appmesh-jaeger.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "appmesh-jaeger.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "appmesh-jaeger.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
    spec:
      serviceAccountName: {{ include "appmesh-jaeger.serviceAccountName" . }}
      volumes:
      - name: data
        {{- if .Values.persistentVolumeClaim.claimName }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistentVolumeClaim.claimName }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
            - containerPort: 9411
              protocol: TCP
            - containerPort: 16686
              protocol: TCP
            - containerPort: 14250
              protocol: TCP
            - containerPort: 14267
              protocol: TCP
            - containerPort: 14268
              protocol: TCP
            - containerPort: 14269
              protocol: TCP
          env:
            - name: MEMORY_MAX_TRACES
              value: "{{ .Values.memory.maxTraces }}"
            - name: COLLECTOR_ZIPKIN_HTTP_PORT
              value: "9411"
            - name: BADGER_EPHEMERAL
              value: "false"
            - name: SPAN_STORAGE_TYPE
              value: "badger"
            - name: BADGER_DIRECTORY_VALUE
              value: "/badger/data"
            - name: BADGER_DIRECTORY_KEY
              value: "/badger/key"
            - name: QUERY_BASE_PATH
              value:  /jaeger
          livenessProbe:
            httpGet:
              path: /
              port: 14269
          readinessProbe:
            httpGet:
              path: /
              port: 14269
          volumeMounts:
            - name: data
              mountPath: /badger
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
